plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// https://mvnrepository.com/artifact/com.google.guava/guava
	implementation group: 'com.google.guava', name: 'guava', version: '31.1-jre'
	
	// jjwt 라이브러리, JWT를 이용한 인증을 위해 추가
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
	// jdk11의 jwt 토큰 생성 관련 모듈
	// https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
	implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	
	// mysql을 사용하기 위해 mysql-connector 추가
	runtimeOnly 'mysql:mysql-connector-java'
}

task('release') {
	/* ./gradlew build를 먼저 실행하라는 뜻 */
	dependsOn("build")
	
	doLast {
		def stdout = new ByteArrayOutputStream()
		/* exec - 커맨드 라인 프로세서; 파워셀/터미널에서 실행하는 것과 동일 */
		exec {
			/* $eb setenv SPRING_PROFILES_ACTIVE=prod */
			commandLine 'eb', 'setenv', 'SPRING_PROFILES_ACTIVE=prod'
			standardOutput = stdout
		}
		/* 결과 로깅을 위한 작업 */
		println "eb setenv SPRING_PROFILES_ACTIVE=prod :\n$stdout";
		exec {
			/* $eb deploy */
			commandLine 'eb', 'deploy'
			standardOutput = stdout
		}
		println "eb deploy :\n$stdout";
		println "Release succeeded";
	}
}